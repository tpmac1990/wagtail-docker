version: '3.9'

services:
  app:
    container_name: app
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      # - ./data/web:/vol/web
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - ELASTICSEARCH_DSL_HOSTS=es:9200
    depends_on:
      - db
      - es

  db:
    image: postgres:13-alpine
    container_name: db
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: redis

  celery:
    restart: always
    container_name: celery
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db
      - redis
      - app

  es:
    image: elasticsearch:7.8.1
    container_name: es
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
